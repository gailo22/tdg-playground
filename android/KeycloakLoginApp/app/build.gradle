plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    alias(libs.plugins.org.jetbrains.kotlin.kapt)
    alias(libs.plugins.hilt)
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.example.jetpack.keycloakloginapp'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.jetpack.keycloakloginapp"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "2.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        packagingOptions {
            pickFirst("lib/arm64-v8a/libc++_shared.so")
            pickFirst("lib/armeabi/libc++_shared.so")
            pickFirst("lib/armeabi-v7a/libc++_shared.so")
            pickFirst("lib/arm64-v8a/libmarsxlog.so")
            pickFirst("lib/armeabi/libmarsxlog.so")
            pickFirst("lib/armeabi-v7a/libmarsxlog.so")
            pickFirst("lib/arm64-v8a/libv8jni.so")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        beta {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(path: ':data')
    implementation project(path: ':domain')

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    // AppAuth
    implementation 'net.openid:appauth:0.11.1'

    // hilt
    def hilt_version = "2.51.1"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
//    implementation libs.hilt

    // coil
    implementation "io.coil-kt:coil-compose:2.0.0-rc02"

    // firebase
    implementation platform('com.google.firebase:firebase-bom:32.8.1')

    // qr code scanner
    implementation(libs.timber)
    implementation(libs.codescanner)
    implementation(libs.bundles.hilt)
    kapt(libs.hiltCompiler)
    implementation(libs.gpsCoroutines)
    implementation(libs.kotlinxSerialization)
    implementation libs.androidx.lifecycle.runtime.compose

    // mini-program
    //gosn
    implementation("com.google.code.gson:gson:2.8.6")
    // ok-http
    implementation("com.squareup.okhttp3:okhttp:3.12.13")
    //x5 static kernel start
    implementation("com.tencent.tmf.android:tbscore:20230710_1127_20230710_1127-681--SNAPSHOT")
    //x5 static kernel end
    // mini app start
    kapt("com.tencent.tcmpp.android:mini_annotation_processor:1.5.2")
    implementation("com.tencent.tcmpp.android:mini_core:1.5.12")
    implementation("com.tencent.tcmpp.android:mini_extra_v8:1.5.1")
    // mini app end

}

kapt {
    correctErrorTypes true
}

hilt {
    enableAggregatingTask = false
}